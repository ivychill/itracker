// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Tss.pb.h"

@implementation TssRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TssRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL LYDirectionIsValidValue(LYDirection value) {
  switch (value) {
    case LYDirectionLyUnknown:
    case LYDirectionLyEast:
    case LYDirectionLyNortheast:
    case LYDirectionLyNorth:
    case LYDirectionLyNorthwest:
    case LYDirectionLyWest:
    case LYDirectionLySouthwest:
    case LYDirectionLySouth:
    case LYDirectionLySoutheast:
      return YES;
    default:
      return NO;
  }
}
BOOL LYRetCodeIsValidValue(LYRetCode value) {
  switch (value) {
    case LYRetCodeLySuccess:
    case LYRetCodeLyVersionImcompatible:
    case LYRetCodeLyVersionLow:
    case LYRetCodeLyPartyError:
    case LYRetCodeLyMsgTypeError:
    case LYRetCodeLyTimeout:
    case LYRetCodeLyOtherError:
      return YES;
    default:
      return NO;
  }
}
BOOL LYPartyIsValidValue(LYParty value) {
  switch (value) {
    case LYPartyLyClient:
    case LYPartyLyTss:
      return YES;
    default:
      return NO;
  }
}
BOOL LYMsgTypeIsValidValue(LYMsgType value) {
  switch (value) {
    case LYMsgTypeLyVoid:
    case LYMsgTypeLyRetCode:
    case LYMsgTypeLyTrafficSub:
    case LYMsgTypeLyTrafficReport:
    case LYMsgTypeLyDeviceReport:
    case LYMsgTypeLyTrafficPub:
      return YES;
    default:
      return NO;
  }
}
@interface LYCoordinate ()
@property Float64 lng;
@property Float64 lat;
@end

@implementation LYCoordinate

- (BOOL) hasLng {
  return !!hasLng_;
}
- (void) setHasLng:(BOOL) value {
  hasLng_ = !!value;
}
@synthesize lng;
- (BOOL) hasLat {
  return !!hasLat_;
}
- (void) setHasLat:(BOOL) value {
  hasLat_ = !!value;
}
@synthesize lat;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.lng = 0;
    self.lat = 0;
  }
  return self;
}
static LYCoordinate* defaultLYCoordinateInstance = nil;
+ (void) initialize {
  if (self == [LYCoordinate class]) {
    defaultLYCoordinateInstance = [[LYCoordinate alloc] init];
  }
}
+ (LYCoordinate*) defaultInstance {
  return defaultLYCoordinateInstance;
}
- (LYCoordinate*) defaultInstance {
  return defaultLYCoordinateInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLng) {
    return NO;
  }
  if (!self.hasLat) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLng) {
    [output writeDouble:1 value:self.lng];
  }
  if (self.hasLat) {
    [output writeDouble:2 value:self.lat];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLng) {
    size += computeDoubleSize(1, self.lng);
  }
  if (self.hasLat) {
    size += computeDoubleSize(2, self.lat);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYCoordinate*) parseFromData:(NSData*) data {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromData:data] build];
}
+ (LYCoordinate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYCoordinate*) parseFromInputStream:(NSInputStream*) input {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromInputStream:input] build];
}
+ (LYCoordinate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCoordinate*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromCodedInputStream:input] build];
}
+ (LYCoordinate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCoordinate*)[[[LYCoordinate builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCoordinate_Builder*) builder {
  return [[[LYCoordinate_Builder alloc] init] autorelease];
}
+ (LYCoordinate_Builder*) builderWithPrototype:(LYCoordinate*) prototype {
  return [[LYCoordinate builder] mergeFrom:prototype];
}
- (LYCoordinate_Builder*) builder {
  return [LYCoordinate builder];
}
@end

@interface LYCoordinate_Builder()
@property (retain) LYCoordinate* result;
@end

@implementation LYCoordinate_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYCoordinate alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYCoordinate_Builder*) clear {
  self.result = [[[LYCoordinate alloc] init] autorelease];
  return self;
}
- (LYCoordinate_Builder*) clone {
  return [LYCoordinate builderWithPrototype:result];
}
- (LYCoordinate*) defaultInstance {
  return [LYCoordinate defaultInstance];
}
- (LYCoordinate*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYCoordinate*) buildPartial {
  LYCoordinate* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYCoordinate_Builder*) mergeFrom:(LYCoordinate*) other {
  if (other == [LYCoordinate defaultInstance]) {
    return self;
  }
  if (other.hasLng) {
    [self setLng:other.lng];
  }
  if (other.hasLat) {
    [self setLat:other.lat];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYCoordinate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYCoordinate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setLng:[input readDouble]];
        break;
      }
      case 17: {
        [self setLat:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasLng {
  return result.hasLng;
}
- (Float64) lng {
  return result.lng;
}
- (LYCoordinate_Builder*) setLng:(Float64) value {
  result.hasLng = YES;
  result.lng = value;
  return self;
}
- (LYCoordinate_Builder*) clearLng {
  result.hasLng = NO;
  result.lng = 0;
  return self;
}
- (BOOL) hasLat {
  return result.hasLat;
}
- (Float64) lat {
  return result.lat;
}
- (LYCoordinate_Builder*) setLat:(Float64) value {
  result.hasLat = YES;
  result.lat = value;
  return self;
}
- (LYCoordinate_Builder*) clearLat {
  result.hasLat = NO;
  result.lat = 0;
  return self;
}
@end

@interface LYLocation ()
@property Float64 lng;
@property Float64 lat;
@property (retain) NSString* name;
@property (retain) NSString* adt;
@end

@implementation LYLocation

- (BOOL) hasLng {
  return !!hasLng_;
}
- (void) setHasLng:(BOOL) value {
  hasLng_ = !!value;
}
@synthesize lng;
- (BOOL) hasLat {
  return !!hasLat_;
}
- (void) setHasLat:(BOOL) value {
  hasLat_ = !!value;
}
@synthesize lat;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasAdt {
  return !!hasAdt_;
}
- (void) setHasAdt:(BOOL) value {
  hasAdt_ = !!value;
}
@synthesize adt;
- (void) dealloc {
  self.name = nil;
  self.adt = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.lng = 0;
    self.lat = 0;
    self.name = @"";
    self.adt = @"";
  }
  return self;
}
static LYLocation* defaultLYLocationInstance = nil;
+ (void) initialize {
  if (self == [LYLocation class]) {
    defaultLYLocationInstance = [[LYLocation alloc] init];
  }
}
+ (LYLocation*) defaultInstance {
  return defaultLYLocationInstance;
}
- (LYLocation*) defaultInstance {
  return defaultLYLocationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLng) {
    return NO;
  }
  if (!self.hasLat) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLng) {
    [output writeDouble:1 value:self.lng];
  }
  if (self.hasLat) {
    [output writeDouble:2 value:self.lat];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasAdt) {
    [output writeString:11 value:self.adt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLng) {
    size += computeDoubleSize(1, self.lng);
  }
  if (self.hasLat) {
    size += computeDoubleSize(2, self.lat);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasAdt) {
    size += computeStringSize(11, self.adt);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYLocation*) parseFromData:(NSData*) data {
  return (LYLocation*)[[[LYLocation builder] mergeFromData:data] build];
}
+ (LYLocation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYLocation*)[[[LYLocation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYLocation*) parseFromInputStream:(NSInputStream*) input {
  return (LYLocation*)[[[LYLocation builder] mergeFromInputStream:input] build];
}
+ (LYLocation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYLocation*)[[[LYLocation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYLocation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYLocation*)[[[LYLocation builder] mergeFromCodedInputStream:input] build];
}
+ (LYLocation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYLocation*)[[[LYLocation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYLocation_Builder*) builder {
  return [[[LYLocation_Builder alloc] init] autorelease];
}
+ (LYLocation_Builder*) builderWithPrototype:(LYLocation*) prototype {
  return [[LYLocation builder] mergeFrom:prototype];
}
- (LYLocation_Builder*) builder {
  return [LYLocation builder];
}
@end

@interface LYLocation_Builder()
@property (retain) LYLocation* result;
@end

@implementation LYLocation_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYLocation alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYLocation_Builder*) clear {
  self.result = [[[LYLocation alloc] init] autorelease];
  return self;
}
- (LYLocation_Builder*) clone {
  return [LYLocation builderWithPrototype:result];
}
- (LYLocation*) defaultInstance {
  return [LYLocation defaultInstance];
}
- (LYLocation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYLocation*) buildPartial {
  LYLocation* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYLocation_Builder*) mergeFrom:(LYLocation*) other {
  if (other == [LYLocation defaultInstance]) {
    return self;
  }
  if (other.hasLng) {
    [self setLng:other.lng];
  }
  if (other.hasLat) {
    [self setLat:other.lat];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAdt) {
    [self setAdt:other.adt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYLocation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYLocation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setLng:[input readDouble]];
        break;
      }
      case 17: {
        [self setLat:[input readDouble]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 90: {
        [self setAdt:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLng {
  return result.hasLng;
}
- (Float64) lng {
  return result.lng;
}
- (LYLocation_Builder*) setLng:(Float64) value {
  result.hasLng = YES;
  result.lng = value;
  return self;
}
- (LYLocation_Builder*) clearLng {
  result.hasLng = NO;
  result.lng = 0;
  return self;
}
- (BOOL) hasLat {
  return result.hasLat;
}
- (Float64) lat {
  return result.lat;
}
- (LYLocation_Builder*) setLat:(Float64) value {
  result.hasLat = YES;
  result.lat = value;
  return self;
}
- (LYLocation_Builder*) clearLat {
  result.hasLat = NO;
  result.lat = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (LYLocation_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (LYLocation_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasAdt {
  return result.hasAdt;
}
- (NSString*) adt {
  return result.adt;
}
- (LYLocation_Builder*) setAdt:(NSString*) value {
  result.hasAdt = YES;
  result.adt = value;
  return self;
}
- (LYLocation_Builder*) clearAdt {
  result.hasAdt = NO;
  result.adt = @"";
  return self;
}
@end

@interface LYSegment ()
@property (retain) LYCoordinate* start;
@property (retain) LYCoordinate* end;
@property (retain) NSString* road;
@end

@implementation LYSegment

- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) value {
  hasStart_ = !!value;
}
@synthesize start;
- (BOOL) hasEnd {
  return !!hasEnd_;
}
- (void) setHasEnd:(BOOL) value {
  hasEnd_ = !!value;
}
@synthesize end;
- (BOOL) hasRoad {
  return !!hasRoad_;
}
- (void) setHasRoad:(BOOL) value {
  hasRoad_ = !!value;
}
@synthesize road;
- (void) dealloc {
  self.start = nil;
  self.end = nil;
  self.road = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.start = [LYCoordinate defaultInstance];
    self.end = [LYCoordinate defaultInstance];
    self.road = @"";
  }
  return self;
}
static LYSegment* defaultLYSegmentInstance = nil;
+ (void) initialize {
  if (self == [LYSegment class]) {
    defaultLYSegmentInstance = [[LYSegment alloc] init];
  }
}
+ (LYSegment*) defaultInstance {
  return defaultLYSegmentInstance;
}
- (LYSegment*) defaultInstance {
  return defaultLYSegmentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStart) {
    return NO;
  }
  if (!self.hasEnd) {
    return NO;
  }
  if (!self.start.isInitialized) {
    return NO;
  }
  if (!self.end.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStart) {
    [output writeMessage:1 value:self.start];
  }
  if (self.hasEnd) {
    [output writeMessage:2 value:self.end];
  }
  if (self.hasRoad) {
    [output writeString:3 value:self.road];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStart) {
    size += computeMessageSize(1, self.start);
  }
  if (self.hasEnd) {
    size += computeMessageSize(2, self.end);
  }
  if (self.hasRoad) {
    size += computeStringSize(3, self.road);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYSegment*) parseFromData:(NSData*) data {
  return (LYSegment*)[[[LYSegment builder] mergeFromData:data] build];
}
+ (LYSegment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegment*)[[[LYSegment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYSegment*) parseFromInputStream:(NSInputStream*) input {
  return (LYSegment*)[[[LYSegment builder] mergeFromInputStream:input] build];
}
+ (LYSegment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegment*)[[[LYSegment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSegment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYSegment*)[[[LYSegment builder] mergeFromCodedInputStream:input] build];
}
+ (LYSegment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegment*)[[[LYSegment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSegment_Builder*) builder {
  return [[[LYSegment_Builder alloc] init] autorelease];
}
+ (LYSegment_Builder*) builderWithPrototype:(LYSegment*) prototype {
  return [[LYSegment builder] mergeFrom:prototype];
}
- (LYSegment_Builder*) builder {
  return [LYSegment builder];
}
@end

@interface LYSegment_Builder()
@property (retain) LYSegment* result;
@end

@implementation LYSegment_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYSegment alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYSegment_Builder*) clear {
  self.result = [[[LYSegment alloc] init] autorelease];
  return self;
}
- (LYSegment_Builder*) clone {
  return [LYSegment builderWithPrototype:result];
}
- (LYSegment*) defaultInstance {
  return [LYSegment defaultInstance];
}
- (LYSegment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYSegment*) buildPartial {
  LYSegment* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYSegment_Builder*) mergeFrom:(LYSegment*) other {
  if (other == [LYSegment defaultInstance]) {
    return self;
  }
  if (other.hasStart) {
    [self mergeStart:other.start];
  }
  if (other.hasEnd) {
    [self mergeEnd:other.end];
  }
  if (other.hasRoad) {
    [self setRoad:other.road];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYSegment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYSegment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LYCoordinate_Builder* subBuilder = [LYCoordinate builder];
        if (self.hasStart) {
          [subBuilder mergeFrom:self.start];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStart:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        LYCoordinate_Builder* subBuilder = [LYCoordinate builder];
        if (self.hasEnd) {
          [subBuilder mergeFrom:self.end];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEnd:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setRoad:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStart {
  return result.hasStart;
}
- (LYCoordinate*) start {
  return result.start;
}
- (LYSegment_Builder*) setStart:(LYCoordinate*) value {
  result.hasStart = YES;
  result.start = value;
  return self;
}
- (LYSegment_Builder*) setStartBuilder:(LYCoordinate_Builder*) builderForValue {
  return [self setStart:[builderForValue build]];
}
- (LYSegment_Builder*) mergeStart:(LYCoordinate*) value {
  if (result.hasStart &&
      result.start != [LYCoordinate defaultInstance]) {
    result.start =
      [[[LYCoordinate builderWithPrototype:result.start] mergeFrom:value] buildPartial];
  } else {
    result.start = value;
  }
  result.hasStart = YES;
  return self;
}
- (LYSegment_Builder*) clearStart {
  result.hasStart = NO;
  result.start = [LYCoordinate defaultInstance];
  return self;
}
- (BOOL) hasEnd {
  return result.hasEnd;
}
- (LYCoordinate*) end {
  return result.end;
}
- (LYSegment_Builder*) setEnd:(LYCoordinate*) value {
  result.hasEnd = YES;
  result.end = value;
  return self;
}
- (LYSegment_Builder*) setEndBuilder:(LYCoordinate_Builder*) builderForValue {
  return [self setEnd:[builderForValue build]];
}
- (LYSegment_Builder*) mergeEnd:(LYCoordinate*) value {
  if (result.hasEnd &&
      result.end != [LYCoordinate defaultInstance]) {
    result.end =
      [[[LYCoordinate builderWithPrototype:result.end] mergeFrom:value] buildPartial];
  } else {
    result.end = value;
  }
  result.hasEnd = YES;
  return self;
}
- (LYSegment_Builder*) clearEnd {
  result.hasEnd = NO;
  result.end = [LYCoordinate defaultInstance];
  return self;
}
- (BOOL) hasRoad {
  return result.hasRoad;
}
- (NSString*) road {
  return result.road;
}
- (LYSegment_Builder*) setRoad:(NSString*) value {
  result.hasRoad = YES;
  result.road = value;
  return self;
}
- (LYSegment_Builder*) clearRoad {
  result.hasRoad = NO;
  result.road = @"";
  return self;
}
@end

@interface LYRoute ()
@property int32_t identity;
@property (retain) NSMutableArray* mutableSegmentsList;
@end

@implementation LYRoute

- (BOOL) hasIdentity {
  return !!hasIdentity_;
}
- (void) setHasIdentity:(BOOL) value {
  hasIdentity_ = !!value;
}
@synthesize identity;
@synthesize mutableSegmentsList;
- (void) dealloc {
  self.mutableSegmentsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.identity = 0;
  }
  return self;
}
static LYRoute* defaultLYRouteInstance = nil;
+ (void) initialize {
  if (self == [LYRoute class]) {
    defaultLYRouteInstance = [[LYRoute alloc] init];
  }
}
+ (LYRoute*) defaultInstance {
  return defaultLYRouteInstance;
}
- (LYRoute*) defaultInstance {
  return defaultLYRouteInstance;
}
- (NSArray*) segmentsList {
  return mutableSegmentsList;
}
- (LYSegment*) segmentsAtIndex:(int32_t) index {
  id value = [mutableSegmentsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasIdentity) {
    return NO;
  }
  for (LYSegment* element in self.segmentsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIdentity) {
    [output writeInt32:1 value:self.identity];
  }
  for (LYSegment* element in self.segmentsList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIdentity) {
    size += computeInt32Size(1, self.identity);
  }
  for (LYSegment* element in self.segmentsList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYRoute*) parseFromData:(NSData*) data {
  return (LYRoute*)[[[LYRoute builder] mergeFromData:data] build];
}
+ (LYRoute*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoute*)[[[LYRoute builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYRoute*) parseFromInputStream:(NSInputStream*) input {
  return (LYRoute*)[[[LYRoute builder] mergeFromInputStream:input] build];
}
+ (LYRoute*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoute*)[[[LYRoute builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYRoute*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYRoute*)[[[LYRoute builder] mergeFromCodedInputStream:input] build];
}
+ (LYRoute*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoute*)[[[LYRoute builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYRoute_Builder*) builder {
  return [[[LYRoute_Builder alloc] init] autorelease];
}
+ (LYRoute_Builder*) builderWithPrototype:(LYRoute*) prototype {
  return [[LYRoute builder] mergeFrom:prototype];
}
- (LYRoute_Builder*) builder {
  return [LYRoute builder];
}
@end

@interface LYRoute_Builder()
@property (retain) LYRoute* result;
@end

@implementation LYRoute_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYRoute alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYRoute_Builder*) clear {
  self.result = [[[LYRoute alloc] init] autorelease];
  return self;
}
- (LYRoute_Builder*) clone {
  return [LYRoute builderWithPrototype:result];
}
- (LYRoute*) defaultInstance {
  return [LYRoute defaultInstance];
}
- (LYRoute*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYRoute*) buildPartial {
  LYRoute* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYRoute_Builder*) mergeFrom:(LYRoute*) other {
  if (other == [LYRoute defaultInstance]) {
    return self;
  }
  if (other.hasIdentity) {
    [self setIdentity:other.identity];
  }
  if (other.mutableSegmentsList.count > 0) {
    if (result.mutableSegmentsList == nil) {
      result.mutableSegmentsList = [NSMutableArray array];
    }
    [result.mutableSegmentsList addObjectsFromArray:other.mutableSegmentsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYRoute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYRoute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIdentity:[input readInt32]];
        break;
      }
      case 18: {
        LYSegment_Builder* subBuilder = [LYSegment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSegments:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIdentity {
  return result.hasIdentity;
}
- (int32_t) identity {
  return result.identity;
}
- (LYRoute_Builder*) setIdentity:(int32_t) value {
  result.hasIdentity = YES;
  result.identity = value;
  return self;
}
- (LYRoute_Builder*) clearIdentity {
  result.hasIdentity = NO;
  result.identity = 0;
  return self;
}
- (NSArray*) segmentsList {
  if (result.mutableSegmentsList == nil) { return [NSArray array]; }
  return result.mutableSegmentsList;
}
- (LYSegment*) segmentsAtIndex:(int32_t) index {
  return [result segmentsAtIndex:index];
}
- (LYRoute_Builder*) replaceSegmentsAtIndex:(int32_t) index with:(LYSegment*) value {
  [result.mutableSegmentsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LYRoute_Builder*) addAllSegments:(NSArray*) values {
  if (result.mutableSegmentsList == nil) {
    result.mutableSegmentsList = [NSMutableArray array];
  }
  [result.mutableSegmentsList addObjectsFromArray:values];
  return self;
}
- (LYRoute_Builder*) clearSegmentsList {
  result.mutableSegmentsList = nil;
  return self;
}
- (LYRoute_Builder*) addSegments:(LYSegment*) value {
  if (result.mutableSegmentsList == nil) {
    result.mutableSegmentsList = [NSMutableArray array];
  }
  [result.mutableSegmentsList addObject:value];
  return self;
}
@end

@interface LYSegmentTraffic ()
@property (retain) LYSegment* segment;
@property int64_t timestamp;
@property LYDirection direction;
@property int32_t speed;
@property (retain) NSString* details;
@end

@implementation LYSegmentTraffic

- (BOOL) hasSegment {
  return !!hasSegment_;
}
- (void) setHasSegment:(BOOL) value {
  hasSegment_ = !!value;
}
@synthesize segment;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasDirection {
  return !!hasDirection_;
}
- (void) setHasDirection:(BOOL) value {
  hasDirection_ = !!value;
}
@synthesize direction;
- (BOOL) hasSpeed {
  return !!hasSpeed_;
}
- (void) setHasSpeed:(BOOL) value {
  hasSpeed_ = !!value;
}
@synthesize speed;
- (BOOL) hasDetails {
  return !!hasDetails_;
}
- (void) setHasDetails:(BOOL) value {
  hasDetails_ = !!value;
}
@synthesize details;
- (void) dealloc {
  self.segment = nil;
  self.details = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.segment = [LYSegment defaultInstance];
    self.timestamp = 0L;
    self.direction = LYDirectionLyUnknown;
    self.speed = 0;
    self.details = @"";
  }
  return self;
}
static LYSegmentTraffic* defaultLYSegmentTrafficInstance = nil;
+ (void) initialize {
  if (self == [LYSegmentTraffic class]) {
    defaultLYSegmentTrafficInstance = [[LYSegmentTraffic alloc] init];
  }
}
+ (LYSegmentTraffic*) defaultInstance {
  return defaultLYSegmentTrafficInstance;
}
- (LYSegmentTraffic*) defaultInstance {
  return defaultLYSegmentTrafficInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSegment) {
    return NO;
  }
  if (!self.hasDirection) {
    return NO;
  }
  if (!self.hasSpeed) {
    return NO;
  }
  if (!self.segment.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSegment) {
    [output writeMessage:1 value:self.segment];
  }
  if (self.hasTimestamp) {
    [output writeInt64:3 value:self.timestamp];
  }
  if (self.hasDirection) {
    [output writeEnum:4 value:self.direction];
  }
  if (self.hasSpeed) {
    [output writeInt32:5 value:self.speed];
  }
  if (self.hasDetails) {
    [output writeString:11 value:self.details];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSegment) {
    size += computeMessageSize(1, self.segment);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(3, self.timestamp);
  }
  if (self.hasDirection) {
    size += computeEnumSize(4, self.direction);
  }
  if (self.hasSpeed) {
    size += computeInt32Size(5, self.speed);
  }
  if (self.hasDetails) {
    size += computeStringSize(11, self.details);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYSegmentTraffic*) parseFromData:(NSData*) data {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromData:data] build];
}
+ (LYSegmentTraffic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYSegmentTraffic*) parseFromInputStream:(NSInputStream*) input {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromInputStream:input] build];
}
+ (LYSegmentTraffic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSegmentTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromCodedInputStream:input] build];
}
+ (LYSegmentTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSegmentTraffic*)[[[LYSegmentTraffic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSegmentTraffic_Builder*) builder {
  return [[[LYSegmentTraffic_Builder alloc] init] autorelease];
}
+ (LYSegmentTraffic_Builder*) builderWithPrototype:(LYSegmentTraffic*) prototype {
  return [[LYSegmentTraffic builder] mergeFrom:prototype];
}
- (LYSegmentTraffic_Builder*) builder {
  return [LYSegmentTraffic builder];
}
@end

@interface LYSegmentTraffic_Builder()
@property (retain) LYSegmentTraffic* result;
@end

@implementation LYSegmentTraffic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYSegmentTraffic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYSegmentTraffic_Builder*) clear {
  self.result = [[[LYSegmentTraffic alloc] init] autorelease];
  return self;
}
- (LYSegmentTraffic_Builder*) clone {
  return [LYSegmentTraffic builderWithPrototype:result];
}
- (LYSegmentTraffic*) defaultInstance {
  return [LYSegmentTraffic defaultInstance];
}
- (LYSegmentTraffic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYSegmentTraffic*) buildPartial {
  LYSegmentTraffic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYSegmentTraffic_Builder*) mergeFrom:(LYSegmentTraffic*) other {
  if (other == [LYSegmentTraffic defaultInstance]) {
    return self;
  }
  if (other.hasSegment) {
    [self mergeSegment:other.segment];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasDirection) {
    [self setDirection:other.direction];
  }
  if (other.hasSpeed) {
    [self setSpeed:other.speed];
  }
  if (other.hasDetails) {
    [self setDetails:other.details];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYSegmentTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYSegmentTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LYSegment_Builder* subBuilder = [LYSegment builder];
        if (self.hasSegment) {
          [subBuilder mergeFrom:self.segment];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSegment:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (LYDirectionIsValidValue(value)) {
          [self setDirection:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setSpeed:[input readInt32]];
        break;
      }
      case 90: {
        [self setDetails:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSegment {
  return result.hasSegment;
}
- (LYSegment*) segment {
  return result.segment;
}
- (LYSegmentTraffic_Builder*) setSegment:(LYSegment*) value {
  result.hasSegment = YES;
  result.segment = value;
  return self;
}
- (LYSegmentTraffic_Builder*) setSegmentBuilder:(LYSegment_Builder*) builderForValue {
  return [self setSegment:[builderForValue build]];
}
- (LYSegmentTraffic_Builder*) mergeSegment:(LYSegment*) value {
  if (result.hasSegment &&
      result.segment != [LYSegment defaultInstance]) {
    result.segment =
      [[[LYSegment builderWithPrototype:result.segment] mergeFrom:value] buildPartial];
  } else {
    result.segment = value;
  }
  result.hasSegment = YES;
  return self;
}
- (LYSegmentTraffic_Builder*) clearSegment {
  result.hasSegment = NO;
  result.segment = [LYSegment defaultInstance];
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (LYSegmentTraffic_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (LYSegmentTraffic_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasDirection {
  return result.hasDirection;
}
- (LYDirection) direction {
  return result.direction;
}
- (LYSegmentTraffic_Builder*) setDirection:(LYDirection) value {
  result.hasDirection = YES;
  result.direction = value;
  return self;
}
- (LYSegmentTraffic_Builder*) clearDirection {
  result.hasDirection = NO;
  result.direction = LYDirectionLyUnknown;
  return self;
}
- (BOOL) hasSpeed {
  return result.hasSpeed;
}
- (int32_t) speed {
  return result.speed;
}
- (LYSegmentTraffic_Builder*) setSpeed:(int32_t) value {
  result.hasSpeed = YES;
  result.speed = value;
  return self;
}
- (LYSegmentTraffic_Builder*) clearSpeed {
  result.hasSpeed = NO;
  result.speed = 0;
  return self;
}
- (BOOL) hasDetails {
  return result.hasDetails;
}
- (NSString*) details {
  return result.details;
}
- (LYSegmentTraffic_Builder*) setDetails:(NSString*) value {
  result.hasDetails = YES;
  result.details = value;
  return self;
}
- (LYSegmentTraffic_Builder*) clearDetails {
  result.hasDetails = NO;
  result.details = @"";
  return self;
}
@end

@interface LYRoadTraffic ()
@property (retain) NSString* road;
@property int64_t timestamp;
@property (retain) NSMutableArray* mutableSegmentTrafficsList;
@property (retain) NSString* href;
@property (retain) NSString* desc;
@end

@implementation LYRoadTraffic

- (BOOL) hasRoad {
  return !!hasRoad_;
}
- (void) setHasRoad:(BOOL) value {
  hasRoad_ = !!value;
}
@synthesize road;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
@synthesize mutableSegmentTrafficsList;
- (BOOL) hasHref {
  return !!hasHref_;
}
- (void) setHasHref:(BOOL) value {
  hasHref_ = !!value;
}
@synthesize href;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (void) dealloc {
  self.road = nil;
  self.mutableSegmentTrafficsList = nil;
  self.href = nil;
  self.desc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.road = @"";
    self.timestamp = 0L;
    self.href = @"";
    self.desc = @"";
  }
  return self;
}
static LYRoadTraffic* defaultLYRoadTrafficInstance = nil;
+ (void) initialize {
  if (self == [LYRoadTraffic class]) {
    defaultLYRoadTrafficInstance = [[LYRoadTraffic alloc] init];
  }
}
+ (LYRoadTraffic*) defaultInstance {
  return defaultLYRoadTrafficInstance;
}
- (LYRoadTraffic*) defaultInstance {
  return defaultLYRoadTrafficInstance;
}
- (NSArray*) segmentTrafficsList {
  return mutableSegmentTrafficsList;
}
- (LYSegmentTraffic*) segmentTrafficsAtIndex:(int32_t) index {
  id value = [mutableSegmentTrafficsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRoad) {
    return NO;
  }
  for (LYSegmentTraffic* element in self.segmentTrafficsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoad) {
    [output writeString:1 value:self.road];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  for (LYSegmentTraffic* element in self.segmentTrafficsList) {
    [output writeMessage:3 value:element];
  }
  if (self.hasDesc) {
    [output writeString:11 value:self.desc];
  }
  if (self.hasHref) {
    [output writeString:12 value:self.href];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRoad) {
    size += computeStringSize(1, self.road);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  for (LYSegmentTraffic* element in self.segmentTrafficsList) {
    size += computeMessageSize(3, element);
  }
  if (self.hasDesc) {
    size += computeStringSize(11, self.desc);
  }
  if (self.hasHref) {
    size += computeStringSize(12, self.href);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYRoadTraffic*) parseFromData:(NSData*) data {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromData:data] build];
}
+ (LYRoadTraffic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYRoadTraffic*) parseFromInputStream:(NSInputStream*) input {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromInputStream:input] build];
}
+ (LYRoadTraffic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYRoadTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromCodedInputStream:input] build];
}
+ (LYRoadTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYRoadTraffic*)[[[LYRoadTraffic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYRoadTraffic_Builder*) builder {
  return [[[LYRoadTraffic_Builder alloc] init] autorelease];
}
+ (LYRoadTraffic_Builder*) builderWithPrototype:(LYRoadTraffic*) prototype {
  return [[LYRoadTraffic builder] mergeFrom:prototype];
}
- (LYRoadTraffic_Builder*) builder {
  return [LYRoadTraffic builder];
}
@end

@interface LYRoadTraffic_Builder()
@property (retain) LYRoadTraffic* result;
@end

@implementation LYRoadTraffic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYRoadTraffic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYRoadTraffic_Builder*) clear {
  self.result = [[[LYRoadTraffic alloc] init] autorelease];
  return self;
}
- (LYRoadTraffic_Builder*) clone {
  return [LYRoadTraffic builderWithPrototype:result];
}
- (LYRoadTraffic*) defaultInstance {
  return [LYRoadTraffic defaultInstance];
}
- (LYRoadTraffic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYRoadTraffic*) buildPartial {
  LYRoadTraffic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYRoadTraffic_Builder*) mergeFrom:(LYRoadTraffic*) other {
  if (other == [LYRoadTraffic defaultInstance]) {
    return self;
  }
  if (other.hasRoad) {
    [self setRoad:other.road];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.mutableSegmentTrafficsList.count > 0) {
    if (result.mutableSegmentTrafficsList == nil) {
      result.mutableSegmentTrafficsList = [NSMutableArray array];
    }
    [result.mutableSegmentTrafficsList addObjectsFromArray:other.mutableSegmentTrafficsList];
  }
  if (other.hasHref) {
    [self setHref:other.href];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYRoadTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYRoadTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setRoad:[input readString]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 26: {
        LYSegmentTraffic_Builder* subBuilder = [LYSegmentTraffic builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSegmentTraffics:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        [self setDesc:[input readString]];
        break;
      }
      case 98: {
        [self setHref:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRoad {
  return result.hasRoad;
}
- (NSString*) road {
  return result.road;
}
- (LYRoadTraffic_Builder*) setRoad:(NSString*) value {
  result.hasRoad = YES;
  result.road = value;
  return self;
}
- (LYRoadTraffic_Builder*) clearRoad {
  result.hasRoad = NO;
  result.road = @"";
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (LYRoadTraffic_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (LYRoadTraffic_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (NSArray*) segmentTrafficsList {
  if (result.mutableSegmentTrafficsList == nil) { return [NSArray array]; }
  return result.mutableSegmentTrafficsList;
}
- (LYSegmentTraffic*) segmentTrafficsAtIndex:(int32_t) index {
  return [result segmentTrafficsAtIndex:index];
}
- (LYRoadTraffic_Builder*) replaceSegmentTrafficsAtIndex:(int32_t) index with:(LYSegmentTraffic*) value {
  [result.mutableSegmentTrafficsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LYRoadTraffic_Builder*) addAllSegmentTraffics:(NSArray*) values {
  if (result.mutableSegmentTrafficsList == nil) {
    result.mutableSegmentTrafficsList = [NSMutableArray array];
  }
  [result.mutableSegmentTrafficsList addObjectsFromArray:values];
  return self;
}
- (LYRoadTraffic_Builder*) clearSegmentTrafficsList {
  result.mutableSegmentTrafficsList = nil;
  return self;
}
- (LYRoadTraffic_Builder*) addSegmentTraffics:(LYSegmentTraffic*) value {
  if (result.mutableSegmentTrafficsList == nil) {
    result.mutableSegmentTrafficsList = [NSMutableArray array];
  }
  [result.mutableSegmentTrafficsList addObject:value];
  return self;
}
- (BOOL) hasHref {
  return result.hasHref;
}
- (NSString*) href {
  return result.href;
}
- (LYRoadTraffic_Builder*) setHref:(NSString*) value {
  result.hasHref = YES;
  result.href = value;
  return self;
}
- (LYRoadTraffic_Builder*) clearHref {
  result.hasHref = NO;
  result.href = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (LYRoadTraffic_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (LYRoadTraffic_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
@end

@interface LYCityTraffic ()
@property (retain) NSString* city;
@property int64_t timestamp;
@property (retain) NSMutableArray* mutableRoadTrafficsList;
@end

@implementation LYCityTraffic

- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) value {
  hasCity_ = !!value;
}
@synthesize city;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
@synthesize mutableRoadTrafficsList;
- (void) dealloc {
  self.city = nil;
  self.mutableRoadTrafficsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.city = @"";
    self.timestamp = 0L;
  }
  return self;
}
static LYCityTraffic* defaultLYCityTrafficInstance = nil;
+ (void) initialize {
  if (self == [LYCityTraffic class]) {
    defaultLYCityTrafficInstance = [[LYCityTraffic alloc] init];
  }
}
+ (LYCityTraffic*) defaultInstance {
  return defaultLYCityTrafficInstance;
}
- (LYCityTraffic*) defaultInstance {
  return defaultLYCityTrafficInstance;
}
- (NSArray*) roadTrafficsList {
  return mutableRoadTrafficsList;
}
- (LYRoadTraffic*) roadTrafficsAtIndex:(int32_t) index {
  id value = [mutableRoadTrafficsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (LYRoadTraffic* element in self.roadTrafficsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCity) {
    [output writeString:1 value:self.city];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  for (LYRoadTraffic* element in self.roadTrafficsList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCity) {
    size += computeStringSize(1, self.city);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  for (LYRoadTraffic* element in self.roadTrafficsList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYCityTraffic*) parseFromData:(NSData*) data {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromData:data] build];
}
+ (LYCityTraffic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYCityTraffic*) parseFromInputStream:(NSInputStream*) input {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromInputStream:input] build];
}
+ (LYCityTraffic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCityTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromCodedInputStream:input] build];
}
+ (LYCityTraffic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCityTraffic*)[[[LYCityTraffic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCityTraffic_Builder*) builder {
  return [[[LYCityTraffic_Builder alloc] init] autorelease];
}
+ (LYCityTraffic_Builder*) builderWithPrototype:(LYCityTraffic*) prototype {
  return [[LYCityTraffic builder] mergeFrom:prototype];
}
- (LYCityTraffic_Builder*) builder {
  return [LYCityTraffic builder];
}
@end

@interface LYCityTraffic_Builder()
@property (retain) LYCityTraffic* result;
@end

@implementation LYCityTraffic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYCityTraffic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYCityTraffic_Builder*) clear {
  self.result = [[[LYCityTraffic alloc] init] autorelease];
  return self;
}
- (LYCityTraffic_Builder*) clone {
  return [LYCityTraffic builderWithPrototype:result];
}
- (LYCityTraffic*) defaultInstance {
  return [LYCityTraffic defaultInstance];
}
- (LYCityTraffic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYCityTraffic*) buildPartial {
  LYCityTraffic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYCityTraffic_Builder*) mergeFrom:(LYCityTraffic*) other {
  if (other == [LYCityTraffic defaultInstance]) {
    return self;
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.mutableRoadTrafficsList.count > 0) {
    if (result.mutableRoadTrafficsList == nil) {
      result.mutableRoadTrafficsList = [NSMutableArray array];
    }
    [result.mutableRoadTrafficsList addObjectsFromArray:other.mutableRoadTrafficsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYCityTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYCityTraffic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCity:[input readString]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 26: {
        LYRoadTraffic_Builder* subBuilder = [LYRoadTraffic builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRoadTraffics:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCity {
  return result.hasCity;
}
- (NSString*) city {
  return result.city;
}
- (LYCityTraffic_Builder*) setCity:(NSString*) value {
  result.hasCity = YES;
  result.city = value;
  return self;
}
- (LYCityTraffic_Builder*) clearCity {
  result.hasCity = NO;
  result.city = @"";
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (LYCityTraffic_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (LYCityTraffic_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (NSArray*) roadTrafficsList {
  if (result.mutableRoadTrafficsList == nil) { return [NSArray array]; }
  return result.mutableRoadTrafficsList;
}
- (LYRoadTraffic*) roadTrafficsAtIndex:(int32_t) index {
  return [result roadTrafficsAtIndex:index];
}
- (LYCityTraffic_Builder*) replaceRoadTrafficsAtIndex:(int32_t) index with:(LYRoadTraffic*) value {
  [result.mutableRoadTrafficsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LYCityTraffic_Builder*) addAllRoadTraffics:(NSArray*) values {
  if (result.mutableRoadTrafficsList == nil) {
    result.mutableRoadTrafficsList = [NSMutableArray array];
  }
  [result.mutableRoadTrafficsList addObjectsFromArray:values];
  return self;
}
- (LYCityTraffic_Builder*) clearRoadTrafficsList {
  result.mutableRoadTrafficsList = nil;
  return self;
}
- (LYCityTraffic_Builder*) addRoadTraffics:(LYRoadTraffic*) value {
  if (result.mutableRoadTrafficsList == nil) {
    result.mutableRoadTrafficsList = [NSMutableArray array];
  }
  [result.mutableRoadTrafficsList addObject:value];
  return self;
}
@end

@interface LYCrontab ()
@property LYCrontab_LYCronType cronType;
@property int64_t minute;
@property int64_t hour;
@property int32_t dom;
@property int32_t month;
@property int32_t dow;
@end

@implementation LYCrontab

- (BOOL) hasCronType {
  return !!hasCronType_;
}
- (void) setHasCronType:(BOOL) value {
  hasCronType_ = !!value;
}
@synthesize cronType;
- (BOOL) hasMinute {
  return !!hasMinute_;
}
- (void) setHasMinute:(BOOL) value {
  hasMinute_ = !!value;
}
@synthesize minute;
- (BOOL) hasHour {
  return !!hasHour_;
}
- (void) setHasHour:(BOOL) value {
  hasHour_ = !!value;
}
@synthesize hour;
- (BOOL) hasDom {
  return !!hasDom_;
}
- (void) setHasDom:(BOOL) value {
  hasDom_ = !!value;
}
@synthesize dom;
- (BOOL) hasMonth {
  return !!hasMonth_;
}
- (void) setHasMonth:(BOOL) value {
  hasMonth_ = !!value;
}
@synthesize month;
- (BOOL) hasDow {
  return !!hasDow_;
}
- (void) setHasDow:(BOOL) value {
  hasDow_ = !!value;
}
@synthesize dow;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cronType = LYCrontab_LYCronTypeLyRepMinute;
    self.minute = 0L;
    self.hour = 0L;
    self.dom = 0;
    self.month = 0;
    self.dow = 0;
  }
  return self;
}
static LYCrontab* defaultLYCrontabInstance = nil;
+ (void) initialize {
  if (self == [LYCrontab class]) {
    defaultLYCrontabInstance = [[LYCrontab alloc] init];
  }
}
+ (LYCrontab*) defaultInstance {
  return defaultLYCrontabInstance;
}
- (LYCrontab*) defaultInstance {
  return defaultLYCrontabInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCronType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCronType) {
    [output writeEnum:1 value:self.cronType];
  }
  if (self.hasMinute) {
    [output writeInt64:2 value:self.minute];
  }
  if (self.hasHour) {
    [output writeInt64:3 value:self.hour];
  }
  if (self.hasDom) {
    [output writeInt32:4 value:self.dom];
  }
  if (self.hasMonth) {
    [output writeInt32:5 value:self.month];
  }
  if (self.hasDow) {
    [output writeInt32:6 value:self.dow];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCronType) {
    size += computeEnumSize(1, self.cronType);
  }
  if (self.hasMinute) {
    size += computeInt64Size(2, self.minute);
  }
  if (self.hasHour) {
    size += computeInt64Size(3, self.hour);
  }
  if (self.hasDom) {
    size += computeInt32Size(4, self.dom);
  }
  if (self.hasMonth) {
    size += computeInt32Size(5, self.month);
  }
  if (self.hasDow) {
    size += computeInt32Size(6, self.dow);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYCrontab*) parseFromData:(NSData*) data {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromData:data] build];
}
+ (LYCrontab*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYCrontab*) parseFromInputStream:(NSInputStream*) input {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromInputStream:input] build];
}
+ (LYCrontab*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCrontab*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromCodedInputStream:input] build];
}
+ (LYCrontab*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYCrontab*)[[[LYCrontab builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYCrontab_Builder*) builder {
  return [[[LYCrontab_Builder alloc] init] autorelease];
}
+ (LYCrontab_Builder*) builderWithPrototype:(LYCrontab*) prototype {
  return [[LYCrontab builder] mergeFrom:prototype];
}
- (LYCrontab_Builder*) builder {
  return [LYCrontab builder];
}
@end

BOOL LYCrontab_LYCronTypeIsValidValue(LYCrontab_LYCronType value) {
  switch (value) {
    case LYCrontab_LYCronTypeLyRepMinute:
    case LYCrontab_LYCronTypeLyRepHour:
    case LYCrontab_LYCronTypeLyRepDom:
    case LYCrontab_LYCronTypeLyRepMonth:
    case LYCrontab_LYCronTypeLyRepDow:
      return YES;
    default:
      return NO;
  }
}
@interface LYCrontab_Builder()
@property (retain) LYCrontab* result;
@end

@implementation LYCrontab_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYCrontab alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYCrontab_Builder*) clear {
  self.result = [[[LYCrontab alloc] init] autorelease];
  return self;
}
- (LYCrontab_Builder*) clone {
  return [LYCrontab builderWithPrototype:result];
}
- (LYCrontab*) defaultInstance {
  return [LYCrontab defaultInstance];
}
- (LYCrontab*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYCrontab*) buildPartial {
  LYCrontab* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYCrontab_Builder*) mergeFrom:(LYCrontab*) other {
  if (other == [LYCrontab defaultInstance]) {
    return self;
  }
  if (other.hasCronType) {
    [self setCronType:other.cronType];
  }
  if (other.hasMinute) {
    [self setMinute:other.minute];
  }
  if (other.hasHour) {
    [self setHour:other.hour];
  }
  if (other.hasDom) {
    [self setDom:other.dom];
  }
  if (other.hasMonth) {
    [self setMonth:other.month];
  }
  if (other.hasDow) {
    [self setDow:other.dow];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYCrontab_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYCrontab_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (LYCrontab_LYCronTypeIsValidValue(value)) {
          [self setCronType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setMinute:[input readInt64]];
        break;
      }
      case 24: {
        [self setHour:[input readInt64]];
        break;
      }
      case 32: {
        [self setDom:[input readInt32]];
        break;
      }
      case 40: {
        [self setMonth:[input readInt32]];
        break;
      }
      case 48: {
        [self setDow:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCronType {
  return result.hasCronType;
}
- (LYCrontab_LYCronType) cronType {
  return result.cronType;
}
- (LYCrontab_Builder*) setCronType:(LYCrontab_LYCronType) value {
  result.hasCronType = YES;
  result.cronType = value;
  return self;
}
- (LYCrontab_Builder*) clearCronType {
  result.hasCronType = NO;
  result.cronType = LYCrontab_LYCronTypeLyRepMinute;
  return self;
}
- (BOOL) hasMinute {
  return result.hasMinute;
}
- (int64_t) minute {
  return result.minute;
}
- (LYCrontab_Builder*) setMinute:(int64_t) value {
  result.hasMinute = YES;
  result.minute = value;
  return self;
}
- (LYCrontab_Builder*) clearMinute {
  result.hasMinute = NO;
  result.minute = 0L;
  return self;
}
- (BOOL) hasHour {
  return result.hasHour;
}
- (int64_t) hour {
  return result.hour;
}
- (LYCrontab_Builder*) setHour:(int64_t) value {
  result.hasHour = YES;
  result.hour = value;
  return self;
}
- (LYCrontab_Builder*) clearHour {
  result.hasHour = NO;
  result.hour = 0L;
  return self;
}
- (BOOL) hasDom {
  return result.hasDom;
}
- (int32_t) dom {
  return result.dom;
}
- (LYCrontab_Builder*) setDom:(int32_t) value {
  result.hasDom = YES;
  result.dom = value;
  return self;
}
- (LYCrontab_Builder*) clearDom {
  result.hasDom = NO;
  result.dom = 0;
  return self;
}
- (BOOL) hasMonth {
  return result.hasMonth;
}
- (int32_t) month {
  return result.month;
}
- (LYCrontab_Builder*) setMonth:(int32_t) value {
  result.hasMonth = YES;
  result.month = value;
  return self;
}
- (LYCrontab_Builder*) clearMonth {
  result.hasMonth = NO;
  result.month = 0;
  return self;
}
- (BOOL) hasDow {
  return result.hasDow;
}
- (int32_t) dow {
  return result.dow;
}
- (LYCrontab_Builder*) setDow:(int32_t) value {
  result.hasDow = YES;
  result.dow = value;
  return self;
}
- (LYCrontab_Builder*) clearDow {
  result.hasDow = NO;
  result.dow = 0;
  return self;
}
@end

@interface LYTrafficSub ()
@property (retain) NSString* city;
@property (retain) LYRoute* route;
@property LYTrafficSub_LYOprType oprType;
@property LYTrafficSub_LYPubType pubType;
@property int32_t expires;
@property (retain) LYCrontab* cronTab;
@end

@implementation LYTrafficSub

- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) value {
  hasCity_ = !!value;
}
@synthesize city;
- (BOOL) hasRoute {
  return !!hasRoute_;
}
- (void) setHasRoute:(BOOL) value {
  hasRoute_ = !!value;
}
@synthesize route;
- (BOOL) hasOprType {
  return !!hasOprType_;
}
- (void) setHasOprType:(BOOL) value {
  hasOprType_ = !!value;
}
@synthesize oprType;
- (BOOL) hasPubType {
  return !!hasPubType_;
}
- (void) setHasPubType:(BOOL) value {
  hasPubType_ = !!value;
}
@synthesize pubType;
- (BOOL) hasExpires {
  return !!hasExpires_;
}
- (void) setHasExpires:(BOOL) value {
  hasExpires_ = !!value;
}
@synthesize expires;
- (BOOL) hasCronTab {
  return !!hasCronTab_;
}
- (void) setHasCronTab:(BOOL) value {
  hasCronTab_ = !!value;
}
@synthesize cronTab;
- (void) dealloc {
  self.city = nil;
  self.route = nil;
  self.cronTab = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.city = @"";
    self.route = [LYRoute defaultInstance];
    self.oprType = LYTrafficSub_LYOprTypeLySubCreate;
    self.pubType = LYTrafficSub_LYPubTypeLyPubAdhoc;
    self.expires = 30;
    self.cronTab = [LYCrontab defaultInstance];
  }
  return self;
}
static LYTrafficSub* defaultLYTrafficSubInstance = nil;
+ (void) initialize {
  if (self == [LYTrafficSub class]) {
    defaultLYTrafficSubInstance = [[LYTrafficSub alloc] init];
  }
}
+ (LYTrafficSub*) defaultInstance {
  return defaultLYTrafficSubInstance;
}
- (LYTrafficSub*) defaultInstance {
  return defaultLYTrafficSubInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCity) {
    return NO;
  }
  if (!self.hasRoute) {
    return NO;
  }
  if (!self.hasOprType) {
    return NO;
  }
  if (!self.hasPubType) {
    return NO;
  }
  if (!self.route.isInitialized) {
    return NO;
  }
  if (self.hasCronTab) {
    if (!self.cronTab.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCity) {
    [output writeString:1 value:self.city];
  }
  if (self.hasRoute) {
    [output writeMessage:2 value:self.route];
  }
  if (self.hasOprType) {
    [output writeEnum:3 value:self.oprType];
  }
  if (self.hasPubType) {
    [output writeEnum:4 value:self.pubType];
  }
  if (self.hasExpires) {
    [output writeInt32:5 value:self.expires];
  }
  if (self.hasCronTab) {
    [output writeMessage:6 value:self.cronTab];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCity) {
    size += computeStringSize(1, self.city);
  }
  if (self.hasRoute) {
    size += computeMessageSize(2, self.route);
  }
  if (self.hasOprType) {
    size += computeEnumSize(3, self.oprType);
  }
  if (self.hasPubType) {
    size += computeEnumSize(4, self.pubType);
  }
  if (self.hasExpires) {
    size += computeInt32Size(5, self.expires);
  }
  if (self.hasCronTab) {
    size += computeMessageSize(6, self.cronTab);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYTrafficSub*) parseFromData:(NSData*) data {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromData:data] build];
}
+ (LYTrafficSub*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficSub*) parseFromInputStream:(NSInputStream*) input {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromInputStream:input] build];
}
+ (LYTrafficSub*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficSub*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromCodedInputStream:input] build];
}
+ (LYTrafficSub*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficSub*)[[[LYTrafficSub builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficSub_Builder*) builder {
  return [[[LYTrafficSub_Builder alloc] init] autorelease];
}
+ (LYTrafficSub_Builder*) builderWithPrototype:(LYTrafficSub*) prototype {
  return [[LYTrafficSub builder] mergeFrom:prototype];
}
- (LYTrafficSub_Builder*) builder {
  return [LYTrafficSub builder];
}
@end

BOOL LYTrafficSub_LYOprTypeIsValidValue(LYTrafficSub_LYOprType value) {
  switch (value) {
    case LYTrafficSub_LYOprTypeLySubCreate:
    case LYTrafficSub_LYOprTypeLySubDelete:
    case LYTrafficSub_LYOprTypeLySubUpdate:
      return YES;
    default:
      return NO;
  }
}
BOOL LYTrafficSub_LYPubTypeIsValidValue(LYTrafficSub_LYPubType value) {
  switch (value) {
    case LYTrafficSub_LYPubTypeLyPubAdhoc:
    case LYTrafficSub_LYPubTypeLyPubEvent:
    case LYTrafficSub_LYPubTypeLyPubCron:
      return YES;
    default:
      return NO;
  }
}
@interface LYTrafficSub_Builder()
@property (retain) LYTrafficSub* result;
@end

@implementation LYTrafficSub_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYTrafficSub alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYTrafficSub_Builder*) clear {
  self.result = [[[LYTrafficSub alloc] init] autorelease];
  return self;
}
- (LYTrafficSub_Builder*) clone {
  return [LYTrafficSub builderWithPrototype:result];
}
- (LYTrafficSub*) defaultInstance {
  return [LYTrafficSub defaultInstance];
}
- (LYTrafficSub*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYTrafficSub*) buildPartial {
  LYTrafficSub* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYTrafficSub_Builder*) mergeFrom:(LYTrafficSub*) other {
  if (other == [LYTrafficSub defaultInstance]) {
    return self;
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasRoute) {
    [self mergeRoute:other.route];
  }
  if (other.hasOprType) {
    [self setOprType:other.oprType];
  }
  if (other.hasPubType) {
    [self setPubType:other.pubType];
  }
  if (other.hasExpires) {
    [self setExpires:other.expires];
  }
  if (other.hasCronTab) {
    [self mergeCronTab:other.cronTab];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYTrafficSub_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYTrafficSub_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCity:[input readString]];
        break;
      }
      case 18: {
        LYRoute_Builder* subBuilder = [LYRoute builder];
        if (self.hasRoute) {
          [subBuilder mergeFrom:self.route];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRoute:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (LYTrafficSub_LYOprTypeIsValidValue(value)) {
          [self setOprType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (LYTrafficSub_LYPubTypeIsValidValue(value)) {
          [self setPubType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setExpires:[input readInt32]];
        break;
      }
      case 50: {
        LYCrontab_Builder* subBuilder = [LYCrontab builder];
        if (self.hasCronTab) {
          [subBuilder mergeFrom:self.cronTab];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCronTab:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCity {
  return result.hasCity;
}
- (NSString*) city {
  return result.city;
}
- (LYTrafficSub_Builder*) setCity:(NSString*) value {
  result.hasCity = YES;
  result.city = value;
  return self;
}
- (LYTrafficSub_Builder*) clearCity {
  result.hasCity = NO;
  result.city = @"";
  return self;
}
- (BOOL) hasRoute {
  return result.hasRoute;
}
- (LYRoute*) route {
  return result.route;
}
- (LYTrafficSub_Builder*) setRoute:(LYRoute*) value {
  result.hasRoute = YES;
  result.route = value;
  return self;
}
- (LYTrafficSub_Builder*) setRouteBuilder:(LYRoute_Builder*) builderForValue {
  return [self setRoute:[builderForValue build]];
}
- (LYTrafficSub_Builder*) mergeRoute:(LYRoute*) value {
  if (result.hasRoute &&
      result.route != [LYRoute defaultInstance]) {
    result.route =
      [[[LYRoute builderWithPrototype:result.route] mergeFrom:value] buildPartial];
  } else {
    result.route = value;
  }
  result.hasRoute = YES;
  return self;
}
- (LYTrafficSub_Builder*) clearRoute {
  result.hasRoute = NO;
  result.route = [LYRoute defaultInstance];
  return self;
}
- (BOOL) hasOprType {
  return result.hasOprType;
}
- (LYTrafficSub_LYOprType) oprType {
  return result.oprType;
}
- (LYTrafficSub_Builder*) setOprType:(LYTrafficSub_LYOprType) value {
  result.hasOprType = YES;
  result.oprType = value;
  return self;
}
- (LYTrafficSub_Builder*) clearOprType {
  result.hasOprType = NO;
  result.oprType = LYTrafficSub_LYOprTypeLySubCreate;
  return self;
}
- (BOOL) hasPubType {
  return result.hasPubType;
}
- (LYTrafficSub_LYPubType) pubType {
  return result.pubType;
}
- (LYTrafficSub_Builder*) setPubType:(LYTrafficSub_LYPubType) value {
  result.hasPubType = YES;
  result.pubType = value;
  return self;
}
- (LYTrafficSub_Builder*) clearPubType {
  result.hasPubType = NO;
  result.pubType = LYTrafficSub_LYPubTypeLyPubAdhoc;
  return self;
}
- (BOOL) hasExpires {
  return result.hasExpires;
}
- (int32_t) expires {
  return result.expires;
}
- (LYTrafficSub_Builder*) setExpires:(int32_t) value {
  result.hasExpires = YES;
  result.expires = value;
  return self;
}
- (LYTrafficSub_Builder*) clearExpires {
  result.hasExpires = NO;
  result.expires = 30;
  return self;
}
- (BOOL) hasCronTab {
  return result.hasCronTab;
}
- (LYCrontab*) cronTab {
  return result.cronTab;
}
- (LYTrafficSub_Builder*) setCronTab:(LYCrontab*) value {
  result.hasCronTab = YES;
  result.cronTab = value;
  return self;
}
- (LYTrafficSub_Builder*) setCronTabBuilder:(LYCrontab_Builder*) builderForValue {
  return [self setCronTab:[builderForValue build]];
}
- (LYTrafficSub_Builder*) mergeCronTab:(LYCrontab*) value {
  if (result.hasCronTab &&
      result.cronTab != [LYCrontab defaultInstance]) {
    result.cronTab =
      [[[LYCrontab builderWithPrototype:result.cronTab] mergeFrom:value] buildPartial];
  } else {
    result.cronTab = value;
  }
  result.hasCronTab = YES;
  return self;
}
- (LYTrafficSub_Builder*) clearCronTab {
  result.hasCronTab = NO;
  result.cronTab = [LYCrontab defaultInstance];
  return self;
}
@end

@interface LYTrafficPub ()
@property int32_t routeId;
@property (retain) LYCityTraffic* cityTraffic;
@end

@implementation LYTrafficPub

- (BOOL) hasRouteId {
  return !!hasRouteId_;
}
- (void) setHasRouteId:(BOOL) value {
  hasRouteId_ = !!value;
}
@synthesize routeId;
- (BOOL) hasCityTraffic {
  return !!hasCityTraffic_;
}
- (void) setHasCityTraffic:(BOOL) value {
  hasCityTraffic_ = !!value;
}
@synthesize cityTraffic;
- (void) dealloc {
  self.cityTraffic = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.routeId = 0;
    self.cityTraffic = [LYCityTraffic defaultInstance];
  }
  return self;
}
static LYTrafficPub* defaultLYTrafficPubInstance = nil;
+ (void) initialize {
  if (self == [LYTrafficPub class]) {
    defaultLYTrafficPubInstance = [[LYTrafficPub alloc] init];
  }
}
+ (LYTrafficPub*) defaultInstance {
  return defaultLYTrafficPubInstance;
}
- (LYTrafficPub*) defaultInstance {
  return defaultLYTrafficPubInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRouteId) {
    return NO;
  }
  if (!self.hasCityTraffic) {
    return NO;
  }
  if (!self.cityTraffic.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRouteId) {
    [output writeInt32:1 value:self.routeId];
  }
  if (self.hasCityTraffic) {
    [output writeMessage:2 value:self.cityTraffic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRouteId) {
    size += computeInt32Size(1, self.routeId);
  }
  if (self.hasCityTraffic) {
    size += computeMessageSize(2, self.cityTraffic);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYTrafficPub*) parseFromData:(NSData*) data {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromData:data] build];
}
+ (LYTrafficPub*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficPub*) parseFromInputStream:(NSInputStream*) input {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromInputStream:input] build];
}
+ (LYTrafficPub*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficPub*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromCodedInputStream:input] build];
}
+ (LYTrafficPub*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficPub*)[[[LYTrafficPub builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficPub_Builder*) builder {
  return [[[LYTrafficPub_Builder alloc] init] autorelease];
}
+ (LYTrafficPub_Builder*) builderWithPrototype:(LYTrafficPub*) prototype {
  return [[LYTrafficPub builder] mergeFrom:prototype];
}
- (LYTrafficPub_Builder*) builder {
  return [LYTrafficPub builder];
}
@end

@interface LYTrafficPub_Builder()
@property (retain) LYTrafficPub* result;
@end

@implementation LYTrafficPub_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYTrafficPub alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYTrafficPub_Builder*) clear {
  self.result = [[[LYTrafficPub alloc] init] autorelease];
  return self;
}
- (LYTrafficPub_Builder*) clone {
  return [LYTrafficPub builderWithPrototype:result];
}
- (LYTrafficPub*) defaultInstance {
  return [LYTrafficPub defaultInstance];
}
- (LYTrafficPub*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYTrafficPub*) buildPartial {
  LYTrafficPub* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYTrafficPub_Builder*) mergeFrom:(LYTrafficPub*) other {
  if (other == [LYTrafficPub defaultInstance]) {
    return self;
  }
  if (other.hasRouteId) {
    [self setRouteId:other.routeId];
  }
  if (other.hasCityTraffic) {
    [self mergeCityTraffic:other.cityTraffic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYTrafficPub_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYTrafficPub_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRouteId:[input readInt32]];
        break;
      }
      case 18: {
        LYCityTraffic_Builder* subBuilder = [LYCityTraffic builder];
        if (self.hasCityTraffic) {
          [subBuilder mergeFrom:self.cityTraffic];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCityTraffic:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRouteId {
  return result.hasRouteId;
}
- (int32_t) routeId {
  return result.routeId;
}
- (LYTrafficPub_Builder*) setRouteId:(int32_t) value {
  result.hasRouteId = YES;
  result.routeId = value;
  return self;
}
- (LYTrafficPub_Builder*) clearRouteId {
  result.hasRouteId = NO;
  result.routeId = 0;
  return self;
}
- (BOOL) hasCityTraffic {
  return result.hasCityTraffic;
}
- (LYCityTraffic*) cityTraffic {
  return result.cityTraffic;
}
- (LYTrafficPub_Builder*) setCityTraffic:(LYCityTraffic*) value {
  result.hasCityTraffic = YES;
  result.cityTraffic = value;
  return self;
}
- (LYTrafficPub_Builder*) setCityTrafficBuilder:(LYCityTraffic_Builder*) builderForValue {
  return [self setCityTraffic:[builderForValue build]];
}
- (LYTrafficPub_Builder*) mergeCityTraffic:(LYCityTraffic*) value {
  if (result.hasCityTraffic &&
      result.cityTraffic != [LYCityTraffic defaultInstance]) {
    result.cityTraffic =
      [[[LYCityTraffic builderWithPrototype:result.cityTraffic] mergeFrom:value] buildPartial];
  } else {
    result.cityTraffic = value;
  }
  result.hasCityTraffic = YES;
  return self;
}
- (LYTrafficPub_Builder*) clearCityTraffic {
  result.hasCityTraffic = NO;
  result.cityTraffic = [LYCityTraffic defaultInstance];
  return self;
}
@end

@interface LYDeviceReport ()
@property (retain) NSString* deviceId;
@property (retain) NSData* deviceToken;
@property (retain) NSString* deviceName;
@property (retain) NSString* deviceModel;
@property (retain) NSString* deviceOsVersion;
@end

@implementation LYDeviceReport

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) value {
  hasDeviceToken_ = !!value;
}
@synthesize deviceToken;
- (BOOL) hasDeviceName {
  return !!hasDeviceName_;
}
- (void) setHasDeviceName:(BOOL) value {
  hasDeviceName_ = !!value;
}
@synthesize deviceName;
- (BOOL) hasDeviceModel {
  return !!hasDeviceModel_;
}
- (void) setHasDeviceModel:(BOOL) value {
  hasDeviceModel_ = !!value;
}
@synthesize deviceModel;
- (BOOL) hasDeviceOsVersion {
  return !!hasDeviceOsVersion_;
}
- (void) setHasDeviceOsVersion:(BOOL) value {
  hasDeviceOsVersion_ = !!value;
}
@synthesize deviceOsVersion;
- (void) dealloc {
  self.deviceId = nil;
  self.deviceToken = nil;
  self.deviceName = nil;
  self.deviceModel = nil;
  self.deviceOsVersion = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = @"";
    self.deviceToken = [NSData data];
    self.deviceName = @"";
    self.deviceModel = @"";
    self.deviceOsVersion = @"";
  }
  return self;
}
static LYDeviceReport* defaultLYDeviceReportInstance = nil;
+ (void) initialize {
  if (self == [LYDeviceReport class]) {
    defaultLYDeviceReportInstance = [[LYDeviceReport alloc] init];
  }
}
+ (LYDeviceReport*) defaultInstance {
  return defaultLYDeviceReportInstance;
}
- (LYDeviceReport*) defaultInstance {
  return defaultLYDeviceReportInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceId) {
    return NO;
  }
  if (!self.hasDeviceToken) {
    return NO;
  }
  if (!self.hasDeviceName) {
    return NO;
  }
  if (!self.hasDeviceModel) {
    return NO;
  }
  if (!self.hasDeviceOsVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeString:1 value:self.deviceId];
  }
  if (self.hasDeviceToken) {
    [output writeData:2 value:self.deviceToken];
  }
  if (self.hasDeviceName) {
    [output writeString:3 value:self.deviceName];
  }
  if (self.hasDeviceModel) {
    [output writeString:4 value:self.deviceModel];
  }
  if (self.hasDeviceOsVersion) {
    [output writeString:5 value:self.deviceOsVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeStringSize(1, self.deviceId);
  }
  if (self.hasDeviceToken) {
    size += computeDataSize(2, self.deviceToken);
  }
  if (self.hasDeviceName) {
    size += computeStringSize(3, self.deviceName);
  }
  if (self.hasDeviceModel) {
    size += computeStringSize(4, self.deviceModel);
  }
  if (self.hasDeviceOsVersion) {
    size += computeStringSize(5, self.deviceOsVersion);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYDeviceReport*) parseFromData:(NSData*) data {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromData:data] build];
}
+ (LYDeviceReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYDeviceReport*) parseFromInputStream:(NSInputStream*) input {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromInputStream:input] build];
}
+ (LYDeviceReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYDeviceReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromCodedInputStream:input] build];
}
+ (LYDeviceReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYDeviceReport*)[[[LYDeviceReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYDeviceReport_Builder*) builder {
  return [[[LYDeviceReport_Builder alloc] init] autorelease];
}
+ (LYDeviceReport_Builder*) builderWithPrototype:(LYDeviceReport*) prototype {
  return [[LYDeviceReport builder] mergeFrom:prototype];
}
- (LYDeviceReport_Builder*) builder {
  return [LYDeviceReport builder];
}
@end

@interface LYDeviceReport_Builder()
@property (retain) LYDeviceReport* result;
@end

@implementation LYDeviceReport_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYDeviceReport alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYDeviceReport_Builder*) clear {
  self.result = [[[LYDeviceReport alloc] init] autorelease];
  return self;
}
- (LYDeviceReport_Builder*) clone {
  return [LYDeviceReport builderWithPrototype:result];
}
- (LYDeviceReport*) defaultInstance {
  return [LYDeviceReport defaultInstance];
}
- (LYDeviceReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYDeviceReport*) buildPartial {
  LYDeviceReport* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYDeviceReport_Builder*) mergeFrom:(LYDeviceReport*) other {
  if (other == [LYDeviceReport defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasDeviceName) {
    [self setDeviceName:other.deviceName];
  }
  if (other.hasDeviceModel) {
    [self setDeviceModel:other.deviceModel];
  }
  if (other.hasDeviceOsVersion) {
    [self setDeviceOsVersion:other.deviceOsVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYDeviceReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYDeviceReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 18: {
        [self setDeviceToken:[input readData]];
        break;
      }
      case 26: {
        [self setDeviceName:[input readString]];
        break;
      }
      case 34: {
        [self setDeviceModel:[input readString]];
        break;
      }
      case 42: {
        [self setDeviceOsVersion:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (NSString*) deviceId {
  return result.deviceId;
}
- (LYDeviceReport_Builder*) setDeviceId:(NSString*) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (LYDeviceReport_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return result.hasDeviceToken;
}
- (NSData*) deviceToken {
  return result.deviceToken;
}
- (LYDeviceReport_Builder*) setDeviceToken:(NSData*) value {
  result.hasDeviceToken = YES;
  result.deviceToken = value;
  return self;
}
- (LYDeviceReport_Builder*) clearDeviceToken {
  result.hasDeviceToken = NO;
  result.deviceToken = [NSData data];
  return self;
}
- (BOOL) hasDeviceName {
  return result.hasDeviceName;
}
- (NSString*) deviceName {
  return result.deviceName;
}
- (LYDeviceReport_Builder*) setDeviceName:(NSString*) value {
  result.hasDeviceName = YES;
  result.deviceName = value;
  return self;
}
- (LYDeviceReport_Builder*) clearDeviceName {
  result.hasDeviceName = NO;
  result.deviceName = @"";
  return self;
}
- (BOOL) hasDeviceModel {
  return result.hasDeviceModel;
}
- (NSString*) deviceModel {
  return result.deviceModel;
}
- (LYDeviceReport_Builder*) setDeviceModel:(NSString*) value {
  result.hasDeviceModel = YES;
  result.deviceModel = value;
  return self;
}
- (LYDeviceReport_Builder*) clearDeviceModel {
  result.hasDeviceModel = NO;
  result.deviceModel = @"";
  return self;
}
- (BOOL) hasDeviceOsVersion {
  return result.hasDeviceOsVersion;
}
- (NSString*) deviceOsVersion {
  return result.deviceOsVersion;
}
- (LYDeviceReport_Builder*) setDeviceOsVersion:(NSString*) value {
  result.hasDeviceOsVersion = YES;
  result.deviceOsVersion = value;
  return self;
}
- (LYDeviceReport_Builder*) clearDeviceOsVersion {
  result.hasDeviceOsVersion = NO;
  result.deviceOsVersion = @"";
  return self;
}
@end

@interface LYSamplePoint ()
@property (retain) LYCoordinate* spCoordinate;
@property int64_t timestamp;
@property Float64 altitude;
@property int32_t course;
@end

@implementation LYSamplePoint

- (BOOL) hasSpCoordinate {
  return !!hasSpCoordinate_;
}
- (void) setHasSpCoordinate:(BOOL) value {
  hasSpCoordinate_ = !!value;
}
@synthesize spCoordinate;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasAltitude {
  return !!hasAltitude_;
}
- (void) setHasAltitude:(BOOL) value {
  hasAltitude_ = !!value;
}
@synthesize altitude;
- (BOOL) hasCourse {
  return !!hasCourse_;
}
- (void) setHasCourse:(BOOL) value {
  hasCourse_ = !!value;
}
@synthesize course;
- (void) dealloc {
  self.spCoordinate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.spCoordinate = [LYCoordinate defaultInstance];
    self.timestamp = 0L;
    self.altitude = 0;
    self.course = 0;
  }
  return self;
}
static LYSamplePoint* defaultLYSamplePointInstance = nil;
+ (void) initialize {
  if (self == [LYSamplePoint class]) {
    defaultLYSamplePointInstance = [[LYSamplePoint alloc] init];
  }
}
+ (LYSamplePoint*) defaultInstance {
  return defaultLYSamplePointInstance;
}
- (LYSamplePoint*) defaultInstance {
  return defaultLYSamplePointInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSpCoordinate) {
    return NO;
  }
  if (!self.hasTimestamp) {
    return NO;
  }
  if (!self.spCoordinate.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSpCoordinate) {
    [output writeMessage:1 value:self.spCoordinate];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  if (self.hasAltitude) {
    [output writeDouble:3 value:self.altitude];
  }
  if (self.hasCourse) {
    [output writeInt32:4 value:self.course];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSpCoordinate) {
    size += computeMessageSize(1, self.spCoordinate);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  if (self.hasAltitude) {
    size += computeDoubleSize(3, self.altitude);
  }
  if (self.hasCourse) {
    size += computeInt32Size(4, self.course);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYSamplePoint*) parseFromData:(NSData*) data {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromData:data] build];
}
+ (LYSamplePoint*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYSamplePoint*) parseFromInputStream:(NSInputStream*) input {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromInputStream:input] build];
}
+ (LYSamplePoint*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSamplePoint*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromCodedInputStream:input] build];
}
+ (LYSamplePoint*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYSamplePoint*)[[[LYSamplePoint builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYSamplePoint_Builder*) builder {
  return [[[LYSamplePoint_Builder alloc] init] autorelease];
}
+ (LYSamplePoint_Builder*) builderWithPrototype:(LYSamplePoint*) prototype {
  return [[LYSamplePoint builder] mergeFrom:prototype];
}
- (LYSamplePoint_Builder*) builder {
  return [LYSamplePoint builder];
}
@end

@interface LYSamplePoint_Builder()
@property (retain) LYSamplePoint* result;
@end

@implementation LYSamplePoint_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYSamplePoint alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYSamplePoint_Builder*) clear {
  self.result = [[[LYSamplePoint alloc] init] autorelease];
  return self;
}
- (LYSamplePoint_Builder*) clone {
  return [LYSamplePoint builderWithPrototype:result];
}
- (LYSamplePoint*) defaultInstance {
  return [LYSamplePoint defaultInstance];
}
- (LYSamplePoint*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYSamplePoint*) buildPartial {
  LYSamplePoint* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYSamplePoint_Builder*) mergeFrom:(LYSamplePoint*) other {
  if (other == [LYSamplePoint defaultInstance]) {
    return self;
  }
  if (other.hasSpCoordinate) {
    [self mergeSpCoordinate:other.spCoordinate];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasAltitude) {
    [self setAltitude:other.altitude];
  }
  if (other.hasCourse) {
    [self setCourse:other.course];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYSamplePoint_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYSamplePoint_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LYCoordinate_Builder* subBuilder = [LYCoordinate builder];
        if (self.hasSpCoordinate) {
          [subBuilder mergeFrom:self.spCoordinate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSpCoordinate:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 25: {
        [self setAltitude:[input readDouble]];
        break;
      }
      case 32: {
        [self setCourse:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSpCoordinate {
  return result.hasSpCoordinate;
}
- (LYCoordinate*) spCoordinate {
  return result.spCoordinate;
}
- (LYSamplePoint_Builder*) setSpCoordinate:(LYCoordinate*) value {
  result.hasSpCoordinate = YES;
  result.spCoordinate = value;
  return self;
}
- (LYSamplePoint_Builder*) setSpCoordinateBuilder:(LYCoordinate_Builder*) builderForValue {
  return [self setSpCoordinate:[builderForValue build]];
}
- (LYSamplePoint_Builder*) mergeSpCoordinate:(LYCoordinate*) value {
  if (result.hasSpCoordinate &&
      result.spCoordinate != [LYCoordinate defaultInstance]) {
    result.spCoordinate =
      [[[LYCoordinate builderWithPrototype:result.spCoordinate] mergeFrom:value] buildPartial];
  } else {
    result.spCoordinate = value;
  }
  result.hasSpCoordinate = YES;
  return self;
}
- (LYSamplePoint_Builder*) clearSpCoordinate {
  result.hasSpCoordinate = NO;
  result.spCoordinate = [LYCoordinate defaultInstance];
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (LYSamplePoint_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (LYSamplePoint_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasAltitude {
  return result.hasAltitude;
}
- (Float64) altitude {
  return result.altitude;
}
- (LYSamplePoint_Builder*) setAltitude:(Float64) value {
  result.hasAltitude = YES;
  result.altitude = value;
  return self;
}
- (LYSamplePoint_Builder*) clearAltitude {
  result.hasAltitude = NO;
  result.altitude = 0;
  return self;
}
- (BOOL) hasCourse {
  return result.hasCourse;
}
- (int32_t) course {
  return result.course;
}
- (LYSamplePoint_Builder*) setCourse:(int32_t) value {
  result.hasCourse = YES;
  result.course = value;
  return self;
}
- (LYSamplePoint_Builder*) clearCourse {
  result.hasCourse = NO;
  result.course = 0;
  return self;
}
@end

@interface LYTrafficReport ()
@property (retain) NSMutableArray* mutablePointsList;
@end

@implementation LYTrafficReport

@synthesize mutablePointsList;
- (void) dealloc {
  self.mutablePointsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static LYTrafficReport* defaultLYTrafficReportInstance = nil;
+ (void) initialize {
  if (self == [LYTrafficReport class]) {
    defaultLYTrafficReportInstance = [[LYTrafficReport alloc] init];
  }
}
+ (LYTrafficReport*) defaultInstance {
  return defaultLYTrafficReportInstance;
}
- (LYTrafficReport*) defaultInstance {
  return defaultLYTrafficReportInstance;
}
- (NSArray*) pointsList {
  return mutablePointsList;
}
- (LYSamplePoint*) pointsAtIndex:(int32_t) index {
  id value = [mutablePointsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (LYSamplePoint* element in self.pointsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (LYSamplePoint* element in self.pointsList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (LYSamplePoint* element in self.pointsList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYTrafficReport*) parseFromData:(NSData*) data {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromData:data] build];
}
+ (LYTrafficReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficReport*) parseFromInputStream:(NSInputStream*) input {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromInputStream:input] build];
}
+ (LYTrafficReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromCodedInputStream:input] build];
}
+ (LYTrafficReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYTrafficReport*)[[[LYTrafficReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYTrafficReport_Builder*) builder {
  return [[[LYTrafficReport_Builder alloc] init] autorelease];
}
+ (LYTrafficReport_Builder*) builderWithPrototype:(LYTrafficReport*) prototype {
  return [[LYTrafficReport builder] mergeFrom:prototype];
}
- (LYTrafficReport_Builder*) builder {
  return [LYTrafficReport builder];
}
@end

@interface LYTrafficReport_Builder()
@property (retain) LYTrafficReport* result;
@end

@implementation LYTrafficReport_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYTrafficReport alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LYTrafficReport_Builder*) clear {
  self.result = [[[LYTrafficReport alloc] init] autorelease];
  return self;
}
- (LYTrafficReport_Builder*) clone {
  return [LYTrafficReport builderWithPrototype:result];
}
- (LYTrafficReport*) defaultInstance {
  return [LYTrafficReport defaultInstance];
}
- (LYTrafficReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYTrafficReport*) buildPartial {
  LYTrafficReport* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYTrafficReport_Builder*) mergeFrom:(LYTrafficReport*) other {
  if (other == [LYTrafficReport defaultInstance]) {
    return self;
  }
  if (other.mutablePointsList.count > 0) {
    if (result.mutablePointsList == nil) {
      result.mutablePointsList = [NSMutableArray array];
    }
    [result.mutablePointsList addObjectsFromArray:other.mutablePointsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYTrafficReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYTrafficReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LYSamplePoint_Builder* subBuilder = [LYSamplePoint builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPoints:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) pointsList {
  if (result.mutablePointsList == nil) { return [NSArray array]; }
  return result.mutablePointsList;
}
- (LYSamplePoint*) pointsAtIndex:(int32_t) index {
  return [result pointsAtIndex:index];
}
- (LYTrafficReport_Builder*) replacePointsAtIndex:(int32_t) index with:(LYSamplePoint*) value {
  [result.mutablePointsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LYTrafficReport_Builder*) addAllPoints:(NSArray*) values {
  if (result.mutablePointsList == nil) {
    result.mutablePointsList = [NSMutableArray array];
  }
  [result.mutablePointsList addObjectsFromArray:values];
  return self;
}
- (LYTrafficReport_Builder*) clearPointsList {
  result.mutablePointsList = nil;
  return self;
}
- (LYTrafficReport_Builder*) addPoints:(LYSamplePoint*) value {
  if (result.mutablePointsList == nil) {
    result.mutablePointsList = [NSMutableArray array];
  }
  [result.mutablePointsList addObject:value];
  return self;
}
@end

@interface LYMsgOnAir ()
@property int32_t version;
@property int32_t msgId;
@property int64_t timestamp;
@property LYParty fromParty;
@property LYParty toParty;
@property LYMsgType msgType;
@property LYRetCode retCode;
@property (retain) LYDeviceReport* deviceReport;
@property (retain) LYTrafficSub* trafficSub;
@property (retain) LYTrafficPub* trafficPub;
@property (retain) LYTrafficReport* trafficReport;
@end

@implementation LYMsgOnAir

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) value {
  hasMsgId_ = !!value;
}
@synthesize msgId;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasFromParty {
  return !!hasFromParty_;
}
- (void) setHasFromParty:(BOOL) value {
  hasFromParty_ = !!value;
}
@synthesize fromParty;
- (BOOL) hasToParty {
  return !!hasToParty_;
}
- (void) setHasToParty:(BOOL) value {
  hasToParty_ = !!value;
}
@synthesize toParty;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) value {
  hasMsgType_ = !!value;
}
@synthesize msgType;
- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasDeviceReport {
  return !!hasDeviceReport_;
}
- (void) setHasDeviceReport:(BOOL) value {
  hasDeviceReport_ = !!value;
}
@synthesize deviceReport;
- (BOOL) hasTrafficSub {
  return !!hasTrafficSub_;
}
- (void) setHasTrafficSub:(BOOL) value {
  hasTrafficSub_ = !!value;
}
@synthesize trafficSub;
- (BOOL) hasTrafficPub {
  return !!hasTrafficPub_;
}
- (void) setHasTrafficPub:(BOOL) value {
  hasTrafficPub_ = !!value;
}
@synthesize trafficPub;
- (BOOL) hasTrafficReport {
  return !!hasTrafficReport_;
}
- (void) setHasTrafficReport:(BOOL) value {
  hasTrafficReport_ = !!value;
}
@synthesize trafficReport;
- (void) dealloc {
  self.deviceReport = nil;
  self.trafficSub = nil;
  self.trafficPub = nil;
  self.trafficReport = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.version = 0;
    self.msgId = 0;
    self.timestamp = 0L;
    self.fromParty = LYPartyLyClient;
    self.toParty = LYPartyLyClient;
    self.msgType = LYMsgTypeLyVoid;
    self.retCode = LYRetCodeLySuccess;
    self.deviceReport = [LYDeviceReport defaultInstance];
    self.trafficSub = [LYTrafficSub defaultInstance];
    self.trafficPub = [LYTrafficPub defaultInstance];
    self.trafficReport = [LYTrafficReport defaultInstance];
  }
  return self;
}
static LYMsgOnAir* defaultLYMsgOnAirInstance = nil;
+ (void) initialize {
  if (self == [LYMsgOnAir class]) {
    defaultLYMsgOnAirInstance = [[LYMsgOnAir alloc] init];
  }
}
+ (LYMsgOnAir*) defaultInstance {
  return defaultLYMsgOnAirInstance;
}
- (LYMsgOnAir*) defaultInstance {
  return defaultLYMsgOnAirInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasTimestamp) {
    return NO;
  }
  if (!self.hasFromParty) {
    return NO;
  }
  if (!self.hasToParty) {
    return NO;
  }
  if (!self.hasMsgType) {
    return NO;
  }
  if (self.hasDeviceReport) {
    if (!self.deviceReport.isInitialized) {
      return NO;
    }
  }
  if (self.hasTrafficSub) {
    if (!self.trafficSub.isInitialized) {
      return NO;
    }
  }
  if (self.hasTrafficPub) {
    if (!self.trafficPub.isInitialized) {
      return NO;
    }
  }
  if (self.hasTrafficReport) {
    if (!self.trafficReport.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeInt32:1 value:self.version];
  }
  if (self.hasFromParty) {
    [output writeEnum:2 value:self.fromParty];
  }
  if (self.hasToParty) {
    [output writeEnum:3 value:self.toParty];
  }
  if (self.hasMsgType) {
    [output writeEnum:4 value:self.msgType];
  }
  if (self.hasMsgId) {
    [output writeInt32:5 value:self.msgId];
  }
  if (self.hasTimestamp) {
    [output writeInt64:6 value:self.timestamp];
  }
  if (self.hasRetCode) {
    [output writeEnum:17 value:self.retCode];
  }
  if (self.hasDeviceReport) {
    [output writeMessage:19 value:self.deviceReport];
  }
  if (self.hasTrafficSub) {
    [output writeMessage:36 value:self.trafficSub];
  }
  if (self.hasTrafficPub) {
    [output writeMessage:51 value:self.trafficPub];
  }
  if (self.hasTrafficReport) {
    [output writeMessage:65 value:self.trafficReport];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:128
                                        to:256];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasVersion) {
    size += computeInt32Size(1, self.version);
  }
  if (self.hasFromParty) {
    size += computeEnumSize(2, self.fromParty);
  }
  if (self.hasToParty) {
    size += computeEnumSize(3, self.toParty);
  }
  if (self.hasMsgType) {
    size += computeEnumSize(4, self.msgType);
  }
  if (self.hasMsgId) {
    size += computeInt32Size(5, self.msgId);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(6, self.timestamp);
  }
  if (self.hasRetCode) {
    size += computeEnumSize(17, self.retCode);
  }
  if (self.hasDeviceReport) {
    size += computeMessageSize(19, self.deviceReport);
  }
  if (self.hasTrafficSub) {
    size += computeMessageSize(36, self.trafficSub);
  }
  if (self.hasTrafficPub) {
    size += computeMessageSize(51, self.trafficPub);
  }
  if (self.hasTrafficReport) {
    size += computeMessageSize(65, self.trafficReport);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LYMsgOnAir*) parseFromData:(NSData*) data {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromData:data] build];
}
+ (LYMsgOnAir*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LYMsgOnAir*) parseFromInputStream:(NSInputStream*) input {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromInputStream:input] build];
}
+ (LYMsgOnAir*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYMsgOnAir*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromCodedInputStream:input] build];
}
+ (LYMsgOnAir*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LYMsgOnAir*)[[[LYMsgOnAir builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LYMsgOnAir_Builder*) builder {
  return [[[LYMsgOnAir_Builder alloc] init] autorelease];
}
+ (LYMsgOnAir_Builder*) builderWithPrototype:(LYMsgOnAir*) prototype {
  return [[LYMsgOnAir builder] mergeFrom:prototype];
}
- (LYMsgOnAir_Builder*) builder {
  return [LYMsgOnAir builder];
}
@end

@interface LYMsgOnAir_Builder()
@property (retain) LYMsgOnAir* result;
@end

@implementation LYMsgOnAir_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LYMsgOnAir alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (LYMsgOnAir_Builder*) clear {
  self.result = [[[LYMsgOnAir alloc] init] autorelease];
  return self;
}
- (LYMsgOnAir_Builder*) clone {
  return [LYMsgOnAir builderWithPrototype:result];
}
- (LYMsgOnAir*) defaultInstance {
  return [LYMsgOnAir defaultInstance];
}
- (LYMsgOnAir*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LYMsgOnAir*) buildPartial {
  LYMsgOnAir* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LYMsgOnAir_Builder*) mergeFrom:(LYMsgOnAir*) other {
  if (other == [LYMsgOnAir defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasFromParty) {
    [self setFromParty:other.fromParty];
  }
  if (other.hasToParty) {
    [self setToParty:other.toParty];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasDeviceReport) {
    [self mergeDeviceReport:other.deviceReport];
  }
  if (other.hasTrafficSub) {
    [self mergeTrafficSub:other.trafficSub];
  }
  if (other.hasTrafficPub) {
    [self mergeTrafficPub:other.trafficPub];
  }
  if (other.hasTrafficReport) {
    [self mergeTrafficReport:other.trafficReport];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LYMsgOnAir_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LYMsgOnAir_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersion:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (LYPartyIsValidValue(value)) {
          [self setFromParty:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (LYPartyIsValidValue(value)) {
          [self setToParty:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (LYMsgTypeIsValidValue(value)) {
          [self setMsgType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setMsgId:[input readInt32]];
        break;
      }
      case 48: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 136: {
        int32_t value = [input readEnum];
        if (LYRetCodeIsValidValue(value)) {
          [self setRetCode:value];
        } else {
          [unknownFields mergeVarintField:17 value:value];
        }
        break;
      }
      case 154: {
        LYDeviceReport_Builder* subBuilder = [LYDeviceReport builder];
        if (self.hasDeviceReport) {
          [subBuilder mergeFrom:self.deviceReport];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDeviceReport:[subBuilder buildPartial]];
        break;
      }
      case 290: {
        LYTrafficSub_Builder* subBuilder = [LYTrafficSub builder];
        if (self.hasTrafficSub) {
          [subBuilder mergeFrom:self.trafficSub];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTrafficSub:[subBuilder buildPartial]];
        break;
      }
      case 410: {
        LYTrafficPub_Builder* subBuilder = [LYTrafficPub builder];
        if (self.hasTrafficPub) {
          [subBuilder mergeFrom:self.trafficPub];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTrafficPub:[subBuilder buildPartial]];
        break;
      }
      case 522: {
        LYTrafficReport_Builder* subBuilder = [LYTrafficReport builder];
        if (self.hasTrafficReport) {
          [subBuilder mergeFrom:self.trafficReport];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTrafficReport:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (LYMsgOnAir_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasMsgId {
  return result.hasMsgId;
}
- (int32_t) msgId {
  return result.msgId;
}
- (LYMsgOnAir_Builder*) setMsgId:(int32_t) value {
  result.hasMsgId = YES;
  result.msgId = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearMsgId {
  result.hasMsgId = NO;
  result.msgId = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (LYMsgOnAir_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasFromParty {
  return result.hasFromParty;
}
- (LYParty) fromParty {
  return result.fromParty;
}
- (LYMsgOnAir_Builder*) setFromParty:(LYParty) value {
  result.hasFromParty = YES;
  result.fromParty = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearFromParty {
  result.hasFromParty = NO;
  result.fromParty = LYPartyLyClient;
  return self;
}
- (BOOL) hasToParty {
  return result.hasToParty;
}
- (LYParty) toParty {
  return result.toParty;
}
- (LYMsgOnAir_Builder*) setToParty:(LYParty) value {
  result.hasToParty = YES;
  result.toParty = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearToParty {
  result.hasToParty = NO;
  result.toParty = LYPartyLyClient;
  return self;
}
- (BOOL) hasMsgType {
  return result.hasMsgType;
}
- (LYMsgType) msgType {
  return result.msgType;
}
- (LYMsgOnAir_Builder*) setMsgType:(LYMsgType) value {
  result.hasMsgType = YES;
  result.msgType = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearMsgType {
  result.hasMsgType = NO;
  result.msgType = LYMsgTypeLyVoid;
  return self;
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (LYRetCode) retCode {
  return result.retCode;
}
- (LYMsgOnAir_Builder*) setRetCode:(LYRetCode) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (LYMsgOnAir_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = LYRetCodeLySuccess;
  return self;
}
- (BOOL) hasDeviceReport {
  return result.hasDeviceReport;
}
- (LYDeviceReport*) deviceReport {
  return result.deviceReport;
}
- (LYMsgOnAir_Builder*) setDeviceReport:(LYDeviceReport*) value {
  result.hasDeviceReport = YES;
  result.deviceReport = value;
  return self;
}
- (LYMsgOnAir_Builder*) setDeviceReportBuilder:(LYDeviceReport_Builder*) builderForValue {
  return [self setDeviceReport:[builderForValue build]];
}
- (LYMsgOnAir_Builder*) mergeDeviceReport:(LYDeviceReport*) value {
  if (result.hasDeviceReport &&
      result.deviceReport != [LYDeviceReport defaultInstance]) {
    result.deviceReport =
      [[[LYDeviceReport builderWithPrototype:result.deviceReport] mergeFrom:value] buildPartial];
  } else {
    result.deviceReport = value;
  }
  result.hasDeviceReport = YES;
  return self;
}
- (LYMsgOnAir_Builder*) clearDeviceReport {
  result.hasDeviceReport = NO;
  result.deviceReport = [LYDeviceReport defaultInstance];
  return self;
}
- (BOOL) hasTrafficSub {
  return result.hasTrafficSub;
}
- (LYTrafficSub*) trafficSub {
  return result.trafficSub;
}
- (LYMsgOnAir_Builder*) setTrafficSub:(LYTrafficSub*) value {
  result.hasTrafficSub = YES;
  result.trafficSub = value;
  return self;
}
- (LYMsgOnAir_Builder*) setTrafficSubBuilder:(LYTrafficSub_Builder*) builderForValue {
  return [self setTrafficSub:[builderForValue build]];
}
- (LYMsgOnAir_Builder*) mergeTrafficSub:(LYTrafficSub*) value {
  if (result.hasTrafficSub &&
      result.trafficSub != [LYTrafficSub defaultInstance]) {
    result.trafficSub =
      [[[LYTrafficSub builderWithPrototype:result.trafficSub] mergeFrom:value] buildPartial];
  } else {
    result.trafficSub = value;
  }
  result.hasTrafficSub = YES;
  return self;
}
- (LYMsgOnAir_Builder*) clearTrafficSub {
  result.hasTrafficSub = NO;
  result.trafficSub = [LYTrafficSub defaultInstance];
  return self;
}
- (BOOL) hasTrafficPub {
  return result.hasTrafficPub;
}
- (LYTrafficPub*) trafficPub {
  return result.trafficPub;
}
- (LYMsgOnAir_Builder*) setTrafficPub:(LYTrafficPub*) value {
  result.hasTrafficPub = YES;
  result.trafficPub = value;
  return self;
}
- (LYMsgOnAir_Builder*) setTrafficPubBuilder:(LYTrafficPub_Builder*) builderForValue {
  return [self setTrafficPub:[builderForValue build]];
}
- (LYMsgOnAir_Builder*) mergeTrafficPub:(LYTrafficPub*) value {
  if (result.hasTrafficPub &&
      result.trafficPub != [LYTrafficPub defaultInstance]) {
    result.trafficPub =
      [[[LYTrafficPub builderWithPrototype:result.trafficPub] mergeFrom:value] buildPartial];
  } else {
    result.trafficPub = value;
  }
  result.hasTrafficPub = YES;
  return self;
}
- (LYMsgOnAir_Builder*) clearTrafficPub {
  result.hasTrafficPub = NO;
  result.trafficPub = [LYTrafficPub defaultInstance];
  return self;
}
- (BOOL) hasTrafficReport {
  return result.hasTrafficReport;
}
- (LYTrafficReport*) trafficReport {
  return result.trafficReport;
}
- (LYMsgOnAir_Builder*) setTrafficReport:(LYTrafficReport*) value {
  result.hasTrafficReport = YES;
  result.trafficReport = value;
  return self;
}
- (LYMsgOnAir_Builder*) setTrafficReportBuilder:(LYTrafficReport_Builder*) builderForValue {
  return [self setTrafficReport:[builderForValue build]];
}
- (LYMsgOnAir_Builder*) mergeTrafficReport:(LYTrafficReport*) value {
  if (result.hasTrafficReport &&
      result.trafficReport != [LYTrafficReport defaultInstance]) {
    result.trafficReport =
      [[[LYTrafficReport builderWithPrototype:result.trafficReport] mergeFrom:value] buildPartial];
  } else {
    result.trafficReport = value;
  }
  result.hasTrafficReport = YES;
  return self;
}
- (LYMsgOnAir_Builder*) clearTrafficReport {
  result.hasTrafficReport = NO;
  result.trafficReport = [LYTrafficReport defaultInstance];
  return self;
}
@end

